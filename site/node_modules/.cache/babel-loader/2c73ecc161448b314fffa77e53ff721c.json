{"ast":null,"code":"var _jsxFileName = \"/Users/jameskenyon/Documents/Leisure/Tech/Projects/Personal Website/Portfolio-Website/site/src/views/components/TypingElement.js\";\nimport React from \"react\";\nexport default class TypingElement extends React.Component {\n  /*\n    Pass in the word to be displayed and save current state\n    (the name that is currently being displayed on the screen) also the\n    initial delay time so that the animations can be synced \n  */\n  constructor(props) {\n    super(props);\n\n    this.handleTyping = () => {\n      if (this.state.i < this.props.word.length) {\n        this.setState({\n          word: this.state.word + this.props.word[this.state.i],\n          i: this.state.i + 1\n        });\n        setTimeout(this.handleTyping, 100);\n      }\n    };\n\n    this.state = {\n      word: \"\",\n      i: 0\n    };\n  }\n  /* \n    When the component loads, begin the typing animation\n  */\n\n\n  componentDidMount() {\n    setTimeout(this.handleTyping, this.props.initialDelay);\n  }\n  /*\n    Handle the typing animation when the view loads.\n  */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, this.state.word);\n  }\n\n}","map":{"version":3,"sources":["/Users/jameskenyon/Documents/Leisure/Tech/Projects/Personal Website/Portfolio-Website/site/src/views/components/TypingElement.js"],"names":["React","TypingElement","Component","constructor","props","handleTyping","state","i","word","length","setState","setTimeout","componentDidMount","initialDelay","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACzD;;;;;AAKAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkBnBC,YAlBmB,GAkBJ,MAAM;AACnB,UAAI,KAAKC,KAAL,CAAWC,CAAX,GAAe,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,MAAnC,EAA2C;AACzC,aAAKC,QAAL,CAAc;AACZF,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAAX,GAAkB,KAAKJ,KAAL,CAAWI,IAAX,CAAgB,KAAKF,KAAL,CAAWC,CAA3B,CADZ;AAEZA,UAAAA,CAAC,EAAE,KAAKD,KAAL,CAAWC,CAAX,GAAe;AAFN,SAAd;AAIAI,QAAAA,UAAU,CAAC,KAAKN,YAAN,EAAoB,GAApB,CAAV;AACD;AACF,KA1BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXE,MAAAA,IAAI,EAAE,EADK;AAEXD,MAAAA,CAAC,EAAE;AAFQ,KAAb;AAID;AAED;;;;;AAGAK,EAAAA,iBAAiB,GAAG;AAClBD,IAAAA,UAAU,CAAC,KAAKN,YAAN,EAAoB,KAAKD,KAAL,CAAWS,YAA/B,CAAV;AACD;AAED;;;;;AAaAC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKR,KAAL,CAAWE,IAAjB,CAAP;AACD;;AApCwD","sourcesContent":["import React from \"react\";\n\nexport default class TypingElement extends React.Component {\n  /*\n    Pass in the word to be displayed and save current state\n    (the name that is currently being displayed on the screen) also the\n    initial delay time so that the animations can be synced \n  */\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: \"\",\n      i: 0,\n    };\n  }\n\n  /* \n    When the component loads, begin the typing animation\n  */\n  componentDidMount() {\n    setTimeout(this.handleTyping, this.props.initialDelay);\n  }\n\n  /*\n    Handle the typing animation when the view loads.\n  */\n  handleTyping = () => {\n    if (this.state.i < this.props.word.length) {\n      this.setState({\n        word: this.state.word + this.props.word[this.state.i],\n        i: this.state.i + 1,\n      });\n      setTimeout(this.handleTyping, 100);\n    }\n  };\n\n  render() {\n    return <div>{this.state.word}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}